# This file holds all gerrit verifications https://jenkins.osmocom.org/jenkins/view/Jenkins-Gerrit/.
# One cane simply add a gerrit job by adding project's repository to repos list.

- project:
    name: gerrit
    # following default values can be overridden by each repo
    disabled: false
    concurrent: true
    node: osmocom-gerrit-debian9
    # axes related defaults
    slave_axis: !!python/tuple [osmocom-gerrit-debian9]
    a1_name: a1
    a1: !!python/tuple [default]
    a2_name: a2
    a2: !!python/tuple [default]
    a3_name: a3
    a3: !!python/tuple [default]
    a4_name: a4
    a4: !!python/tuple [default]
    combination_filter: ''
    sequential: false
    # most common build invocation
    # SYS_PTRACE is needed for ASAN (https://github.com/google/sanitizers/issues/764)
    # Documentation for variables (keep in sync!):
    # https://osmocom.org/projects/osmocom-servers/wiki/Jenkins_build_verification_jobs
    docker_run: |
            ARTIFACT_STORE="$HOME/jenkins_build_artifact_store"
            mkdir -p "$ARTIFACT_STORE"
            docker run --rm=true \
              --cap-add SYS_PTRACE \
              -e ARTIFACT_STORE=/artifact_store \
              -e ASCIIDOC_WARNINGS_CHECK="1" \
              -e HOME=/build \
              -e JOB_NAME="$JOB_NAME" \
              -e MAKE=make \
              -e OSMOPY_DEBUG_TCP_SOCKETS="1" \
              -e OSMO_GSM_MANUALS_DIR="/build/deps/osmo-gsm-manuals" \
              -e PARALLEL_MAKE="$PARALLEL_MAKE" \
              -e WITH_MANUALS="1" \
              -w /build -i -u build \
              -v "$PWD:/build" \
              -v "$ARTIFACT_STORE:/artifact_store" \
    docker_img: '$USER/debian-stretch-jenkins'
    docker_img_erlang: '$USER/debian-buster-erlang'
    timeout_cmd: '/usr/bin/timeout 30m'
    cmd: '{docker_run} {docker_img} {timeout_cmd} /build/contrib/jenkins.sh'
    gerrit_url: 'ssh://jenkins@gerrit.osmocom.org:29418'
    repos_url: '{gerrit_url}/{repos}'
    gerrit_project: '{repos}'

    # in alphabetical order
    repos:
      - asn1c
      - cellmgr-ng
      - libasn1c
      - libgtpnl
      - libosmo-abis
      - libosmo-netif
      - libosmo-sccp

      - libosmocore:
          a1_name: arch
          a1: !!python/tuple [arm-none-eabi, amd64]
          combination_filter: '!(arch=="arm-none-eabi" && label=="FreeBSD_amd64")'
          cmd: '{docker_run} {docker_img} {timeout_cmd} /build/contrib/jenkins_arch.sh "$arch"'

      - libsmpp34
      - libtelnet
      - libusrp

      - openbsc:
          a1_name: SMPP
          a1: !!python/tuple [--enable-smpp]
          a2_name: MGCP
          a2: !!python/tuple [--enable-mgcp-transcoding, --disable-mgcp-transcoding]
          a3_name: IU
          a3: !!python/tuple [--disable-iu]
          cmd: |
            {docker_run} \
              -e IU="$IU" \
              -e SMPP="$SMPP" \
              -e MGCP="$MGCP" \
              {docker_img} {timeout_cmd} /build/contrib/jenkins.sh

      - openggsn:
          a1_name: GTP
          a1: !!python/tuple [--enable-gtp-linux,--disable-gtp-linux]
          concurrent: false
          cmd: '{timeout_cmd} ./contrib/jenkins.sh'

      - osmo-bsc

      - osmo-bts:
          slave_axis: !!python/tuple [osmocom-master-debian9, rpi4-deb9build-ansible]
          a1_name: FIRMWARE_VERSION
          a1: !!python/tuple [master, femtobts_v2.7, superfemto_v2.4, superfemto_v3.0.1pre, superfemto_v3.1, superfemto_v5.1, v2017.01, litecell15, oc2g, oc2g-next]
          a2_name: BTS_MODEL
          a2: !!python/tuple [sysmo, oct, trx, oct+trx, lc15, oc2g]
          a3_name: WITH_MANUALS
          a3: !!python/tuple ["1", "0"]
          combination_filter: >
            (FIRMWARE_VERSION == "master" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "master" && BTS_MODEL == "trx" && WITH_MANUALS == "0" && label == "rpi4-deb9build-ansible") ||
            (FIRMWARE_VERSION == "femtobts_v2.7" && BTS_MODEL == "sysmo" && WITH_MANUALS == "1" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "superfemto_v2.4" && BTS_MODEL == "sysmo" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "superfemto_v3.0.1pre" && BTS_MODEL == "sysmo" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "superfemto_v3.1" && BTS_MODEL == "sysmo" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "superfemto_v5.1" && BTS_MODEL == "sysmo" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "v2017.01" && BTS_MODEL == "lc15" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "litecell15" && BTS_MODEL == "lc15" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "oc2g" && BTS_MODEL == "oc2g" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (FIRMWARE_VERSION == "oc2g-next" && BTS_MODEL == "oc2g" && WITH_MANUALS == "0" && label == "osmocom-master-debian9")
          concurrent: false
          cmd: 'ASCIIDOC_WARNINGS_CHECK="1" {timeout_cmd} ./contrib/jenkins_bts_model.sh "$BTS_MODEL"'

      - osmo_dia2gsup:
          repos_url: '{gerrit_url}/erlang/{repos}'
          gerrit_project: 'erlang/{repos}'
          cmd: '{docker_run} {docker_img_erlang} {timeout_cmd} /build/contrib/jenkins.sh'

      - osmo-e1-hardware:
          docker_run: |
            ARTIFACT_STORE="$HOME/jenkins_build_artifact_store"
            mkdir -p "$ARTIFACT_STORE"
            docker run --rm=true \
              --cap-add SYS_PTRACE \
              -e ARTIFACT_STORE=/artifact_store \
              -e ASCIIDOC_WARNINGS_CHECK="1" \
              -e HOME=/build \
              -e JOB_NAME="$JOB_NAME" \
              -e MAKE=make \
              -e OSMOPY_DEBUG_TCP_SOCKETS="1" \
              -e PARALLEL_MAKE="$PARALLEL_MAKE" \
              -e WITH_MANUALS="1" \
              -w /build -i -u build \
              -v "$PWD:/build" -v "$HOME/bin:/build_bin" \
              -v "$ARTIFACT_STORE:/artifact_store" \
          docker_img: 'registry.osmocom.org/$USER/fpga-build'
          cmd: 'docker pull {docker_img} && {docker_run} {docker_img} {timeout_cmd} /build/contrib/jenkins.sh'

      - osmo-ggsn:
          a1_name: GTP
          a1: !!python/tuple [--enable-gtp-linux,--disable-gtp-linux]
          a2_name: WITH_MANUALS
          a2: !!python/tuple ["1", "0"]
          combination_filter: >
            (GTP == "--enable-gtp-linux" && WITH_MANUALS == "0") ||
            (GTP == "--disable-gtp-linux" && WITH_MANUALS == "1")
          cmd: |
            {docker_run} \
              -e GTP="$GTP" \
              -e WITH_MANUALS="$WITH_MANUALS" \
              {docker_img} {timeout_cmd} /build/contrib/jenkins.sh

      - osmo-gsm-manuals

      - osmo_gsup:
          repos_url: '{gerrit_url}/erlang/{repos}'
          gerrit_project: 'erlang/{repos}'
          cmd: '{docker_run} {docker_img_erlang} {timeout_cmd} /build/contrib/jenkins.sh'

      - osmo-hlr
      - osmo-iuh
      - osmo-mgw

      - osmo-msc:
          a1_name: IU
          a1: !!python/tuple [--enable-iu, --disable-iu]
          a2_name: WITH_MANUALS
          a2: !!python/tuple ["1", "0"]
          combination_filter: >
            (IU == "--enable-iu" && WITH_MANUALS == "0") ||
            (IU == "--disable-iu" && WITH_MANUALS == "1")
          cmd: |
            {docker_run} \
              -e IU="$IU" \
              -e WITH_MANUALS="$WITH_MANUALS" \
              {docker_img} {timeout_cmd} /build/contrib/jenkins.sh

      - osmo-pcap

      - osmo-pcu:
          slave_axis: !!python/tuple [osmocom-master-debian9, rpi4-deb9build-ansible]
          a1_name: FIRMWARE_VERSION
          a1: !!python/tuple [master, v2017.01, litecell15, oc2g]
          a2_name: with_vty
          a2: !!python/tuple [True, False]
          a3_name: with_dsp
          a3: !!python/tuple [sysmo, lc15, oc2g, none]
          a4_name: WITH_MANUALS
          a4: !!python/tuple ["1", "0"]
          combination_filter: >
            (with_vty == "True" && with_dsp == "sysmo" && FIRMWARE_VERSION=="master" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (with_vty == "True" && with_dsp == "lc15" && FIRMWARE_VERSION=="master" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (with_vty == "True" && with_dsp == "lc15" && FIRMWARE_VERSION=="v2017.01" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (with_vty == "True" && with_dsp == "lc15" && FIRMWARE_VERSION=="litecell15" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (with_vty == "True" && with_dsp == "oc2g" && FIRMWARE_VERSION=="oc2g" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (with_vty == "False" && with_dsp == "none" && FIRMWARE_VERSION=="master" && WITH_MANUALS == "1" && label == "osmocom-master-debian9") ||
            (with_vty == "False" && with_dsp == "none" && FIRMWARE_VERSION=="master" && WITH_MANUALS == "0" && label == "rpi4-deb9build-ansible")
          cmd: |
            {docker_run} \
              -e FIRMWARE_VERSION="$FIRMWARE_VERSION" \
              -e with_vty="$with_vty" \
              -e with_dsp="$with_dsp" \
              -e WITH_MANUALS="$WITH_MANUALS" \
              {docker_img} {timeout_cmd} /build/contrib/jenkins.sh

      - osmo-python-tests:
          repos_url: '{gerrit_url}/python/{repos}'
          gerrit_project: 'python/{repos}'

      - osmo-sgsn:
          a1_name: IU
          a1: !!python/tuple [--enable-iu, --disable-iu]
          a2_name: WITH_MANUALS
          a2: !!python/tuple ["1", "0"]
          combination_filter: >
            (IU == "--enable-iu" && WITH_MANUALS == "0") ||
            (IU == "--disable-iu" && WITH_MANUALS == "1")
          cmd: |
            {docker_run} \
              -e IU="$IU" \
              -e WITH_MANUALS="$WITH_MANUALS" \
              {docker_img} {timeout_cmd} /build/contrib/jenkins.sh

      - osmo_ss7:
          repos_url: '{gerrit_url}/erlang/{repos}'
          gerrit_project: 'erlang/{repos}'
          cmd: '{docker_run} {docker_img_erlang} {timeout_cmd} /build/contrib/jenkins.sh'

      - osmo-sip-connector

      - osmo-trx:
          slave_axis: !!python/tuple [osmocom-master-debian9,rpi4-deb9build-ansible]
          a1_name: INSTR
          a1: !!python/tuple [--with-sse, --without-sse --with-neon, --with-neon-vfpv4]
          a2_name: WITH_MANUALS
          a2: !!python/tuple ["1", "0"]
          combination_filter: >
            (INSTR == "--without-sse" && WITH_MANUALS == "1" && label == "osmocom-master-debian9") ||
            (INSTR == "--with-sse" && WITH_MANUALS == "0" && label == "osmocom-master-debian9") ||
            (INSTR == "--with-neon" && WITH_MANUALS == "0" && label == "rpi4-deb9build-ansible") ||
            (INSTR == "--with-neon-vfpv4" && WITH_MANUALS == "0" && label == "rpi4-deb9build-ansible")
          cmd: 'ASCIIDOC_WARNINGS_CHECK=1 {timeout_cmd} ./contrib/jenkins.sh'

      - osmocom-bb
      - osmo-tetra
      - osmo-sysmon
      - osmo-remsim
      - simtrace2
      - osmo-asf4-dfu
      - osmo-ccid-firmware
      - osmo-e1d
      - osmo-cbc
      - osmo-e1-recorder
      - gapk
      - osmo-uecups
      - osmo-el2tpd
      - osmo-smlc

      - pysim:
          slave_axis: !!python/tuple [simtester]
          concurrent: false
          cmd: '{timeout_cmd} ./contrib/jenkins.sh'

      - osmo-ttcn3-hacks:
          repos_url: 'https://gerrit.osmocom.org/{repos}'
          slave_axis: !!python/tuple [ttcn3]
          concurrent: false
          cmd: |
            set -e
            make deps; make clean; make compile

    jobs:
      - 'gerrit-{repos}'

- job-template:
    name: 'gerrit-{repos}'
    project-type: matrix
    node: '{node}'
    concurrent: '{obj:concurrent}'
    disabled: '{obj:disabled}'
    retry-count: 3 # scm checkout
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 120
          artifact-days-to-keep: -1
          artifact-num-to-keep: -1
    description: |
      Pending gerrit code reviews of
      <a href="https://gerrit.osmocom.org/#/q/status:open+project:{repos}">{repos}</a>
      <br/><br/>
      <b>Auto-generated using Jenkins Job Builder. DO NOT EDIT MANUALLY!</b>

    execution-strategy:
      sequential: '{obj:sequential}'
      combination-filter: |
        {obj:combination_filter}
    axes:
      - axis:
          type: slave
          name: label
          values: '{obj:slave_axis}'
      - axis:
          type: user-defined
          name: '{obj:a1_name}'
          values: '{obj:a1}'
      - axis:
          type: user-defined
          name: '{obj:a2_name}'
          values: '{obj:a2}'
      - axis:
          type: user-defined
          name: '{obj:a3_name}'
          values: '{obj:a3}'
      - axis:
          type: user-defined
          name: '{obj:a4_name}'
          values: '{obj:a4}'

    scm:
      - git:
         url: '{obj:repos_url}'
         credentials-id: d5eda5e9-b59d-44ba-88d2-43473cb6e42d
         branches:
           - $GERRIT_BRANCH
         refspec: $GERRIT_REFSPEC
         name:
         choosing-strategy: gerrit
         wipe-workspace: false
         skip-tag: true
         submodule:
           recursive: true

    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event:
                exclude-drafts: true
                exclude-no-code-change: true
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: '{obj:gerrit_project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**'
          skip-vote:
              successful: false
              failed: false
              unstable: false
              notbuilt: false
          silent: false
          escape-quotes: false
          no-name-and-email: false
          trigger-for-unreviewed-patches: true
          server-name: gerrit.osmocom.org

    builders:
      - shell: '{obj:cmd}'

    publishers:
       - warnings:
           console-log-parsers:
             - 'GNU C Compiler 4 (gcc)'
           resolve-relative-paths: true

# vim: expandtab tabstop=2 shiftwidth=2
